name: Automated release
on: push

jobs:
  build:
    name: Generate macOS app
    runs-on: self-hosted
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Install the Apple certificate and provisioning profile
        env:
          BUILD_CERTIFICATE_BASE64: ${{ secrets.BUILD_CERTIFICATE_BASE64 }}
          P12_PASSWORD: ${{ secrets.P12_PASSWORD }}
          BUILD_PROVISION_PROFILE_BASE64: ${{ secrets.BUILD_PROVISION_PROFILE_BASE64 }}
          KEYCHAIN_PASSWORD: ${{ secrets.KEYCHAIN_PASSWORD }}
        run: ./scripts/ci_certificate.sh
      - name: Build app
        env:
          APPLE_TEAM_ID: ${{ secrets.APPLE_TEAM_ID }}
        run: xcodebuild -scheme SwiftSetup -derivedDataPath "$RUNNER_TEMP/DerivedData" -archivePath "$RUNNER_TEMP/SwiftSetup.xcarchive" -skipPackagePluginValidation DEVELOPMENT_TEAM=$APPLE_TEAM_ID archive
      - name: Sign CodeEdit
        env:
          CODESIGN_SIGN: ${{ secrets.CODESIGN_SIGN }}
        run: |
          REV=$(git rev-parse --short HEAD)
          echo "REV=$REV" >> $GITHUB_ENV
          codesign --sign "$CODESIGN_SIGN" -vvv --verbose --strict --options=runtime --prefix sirily11.SwiftSetup. --force --deep --timestamp "$RUNNER_TEMP/CodeEdit.xcarchive/Products/Applications/SwiftSetup.app"
      - name: Create DMG & Notarize
        env:
          CODESIGN_SIGN: ${{ secrets.CODESIGN_SIGN }}
          APPLE_ID: ${{ secrets.APPLE_ID }}
          APPLE_ID_PWD: ${{ secrets.APPLE_ID_PWD }}
          APPLE_TEAM_ID: ${{ secrets.APPLE_TEAM_ID }}
          RUNNER_PW: ${{ secrets.KEYCHAIN_PASSWORD }}
        run: |
          REV=$(git rev-parse --short HEAD)
          echo "REV=$REV" >> $GITHUB_ENV
          security unlock-keychain -p "$RUNNER_PW"
          xcrun notarytool store-credentials SwiftSetup --apple-id "$APPLE_ID" --team-id "$APPLE_TEAM_ID" --password "$APPLE_ID_PWD"
          create-dmg \
            --volname "SwiftSetup" \
            --window-pos 200 120 \
            --window-size 800 400 \
            --icon-size 100 \
            --icon "SwiftSetup.app" 200 190 \
            --hide-extension "SwiftSetup.app" \
            --app-drop-link 600 185 \
            --codesign "$CODESIGN_SIGN" \
            --notarize "SwiftSetup" \
            "$RUNNER_TEMP/SwiftSetup-$REV.dmg" \
            "$RUNNER_TEMP/SwiftSetup.xcarchive/Products/Applications/"
          security lock-keychain
      - name: Clean up keychain and provisioning profile
        if: ${{ always() }}
        run: |
          security delete-keychain $RUNNER_TEMP/app-signing.keychain-db
          rm ~/Library/MobileDevice/Provisioning\ Profiles/build_pp.mobileprovision
  create-release:
    if: ${{ github.event.pusher.name != 'github action' }}
    runs-on: ubuntu-latest
    needs: build
    permissions:
      contents: write
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Get next version
        id: version
        uses: cycjimmy/semantic-release-action@v3
        env:
          GITHUB_TOKEN: ${{ secrets.RELEASE_TOKEN }}
        with:
          branch: main
          dry_run: true
      - run: echo Released ${{ steps.version.outputs.new_release_version }}
      - uses: sirily11/ios-bump-version@master
        with:
          version: ${{ steps.version.outputs.new_release_version }}
          build-number: ${{github.run_attempt }}
      - uses: EndBug/add-and-commit@v9
        name: Add and commit version changed
        with:
          message: "Release ${{ steps.version.outputs.new_release_version }}"
          push: false
        if: ${{ github.ref == 'refs/heads/main' }}
      - name: Create Release
        uses: cycjimmy/semantic-release-action@v3
        env:
          GITHUB_TOKEN: ${{ secrets.RELEASE_TOKEN }}
        with:
          branch: main
          dry_run: false
        if: ${{ github.ref == 'refs/heads/main' }}
      - uses: EndBug/add-and-commit@v9
        name: Push release commit
        with:
          push: ${{ github.ref == 'refs/heads/main' }}
        if: ${{ github.ref == 'refs/heads/main' }}
      - name: Push release
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: main
          force: true
        if: ${{ github.ref == 'refs/heads/main' }}
